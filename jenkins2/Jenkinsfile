pipeline {

agent any

environment {
  registry = "https://hub.docker.com/"
  registryCredential = 'docker_cred'
  dockerimage = "salahabbasi/centos:$BUILD_NUMBER"
  //TRIVY_REPORT = "trivy-report.json"
  SONAR_HOME = tool "sonar-scanner"
  //SONAR_CRED = credentials('sonar_id')
  SONARQUBE = 'LocalSonarQube'
}

stages {
 stage ('get branch') {
   steps {
		echo 'working branch is ' + "$GIT_BRANCH"
   }
 
 }

stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube scan
                    withSonarQubeEnv(SONARQUBE) {
                        sh 'mvn clean install sonar:sonar -Dsonar.projectKey=salah-1 -Dsonar.projectName=salah-1'
                    }
                }
            }
        }

//stage ('ODC') {
//steps {
//	dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'dc'
//	dependencyCheckPublisher pattern: '**/dependencycheckReport.html'
	
//}
//}
	 
 stage ('build image') {
 steps {
	echo 'building image'
	script  {
	sh ( script: '''
	    docker images -a
     	    cd docker
     	    docker build -t ${dockerimage} .
	    docker images -a 
	''')
		}
 	 }
 }
 
//stage ('Scan image') {
//  steps {
//	echo 'Scanning the image'
//	sh "trivy image  ${dockerimage}" 
//	 }
//    }

stage ('Update deployment') {
  steps {
	echo "Pushing image to DockerHub"
	  script {
		docker.withRegistry('', registryCredential)
		  {
		    sh 'docker push ${dockerimage}' 
		  }
		  
	  }
	  
  }
}
stage ('Deployment of image') {
	steps {
	withCredentials([string(credentialsId: 'github_pat', variable: 'GITHUB_PAT')]){
		script { 
	    sh (script: '''
	    cp -f data/deploy.yaml.template argo-yaml/deploy.yaml
	    sed -i "s/\\${build_number}/$BUILD_NUMBER/g" argo-yaml/deploy.yaml
     	    git config --global user.email "salauss00@gmail.com"
 	    git config --global user.name "salausss"
	    git add argo-yaml/deploy.yaml
	    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
	    git push https://${GITHUB_PAT}@github.com/salausss/ci-cd HEAD:main
     	    ''')
		} }
		
	}
}

	}
}
